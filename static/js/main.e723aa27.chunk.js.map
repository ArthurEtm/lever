{"version":3,"sources":["components/MsgToArt.js","components/StateExample.js","components/Lever.js","App.js","index.js"],"names":["AlertDismissible","useState","show","setShow","Container","className","Alert","variant","Heading","href","target","rel","Button","onClick","StateExample","props","state","inputValue","handleChange","bind","event","this","setState","value","type","placeholder","onChange","Component","Lever","IncrementItem","clicks","DecreaseItem","ToggleClick","App","ReactDOM","render","document","getElementById"],"mappings":"wPAGe,SAASA,IAAoB,IAAD,EACjBC,oBAAS,GADQ,mBAClCC,EADkC,KAC5BC,EAD4B,KAGzC,OACE,oCACE,kBAACC,EAAA,EAAD,CAAWC,UAAU,QACnB,kBAACC,EAAA,EAAD,CAAOJ,KAAMA,EAAMK,QAAQ,WACzB,kBAACD,EAAA,EAAME,QAAP,6BACA,gKAIA,uBACEC,KAAK,0BACLC,OAAO,SACPC,IAAI,uBAHN,wBAOA,6BACA,yBAAKN,UAAU,8BACb,kBAACO,EAAA,EAAD,CAAQC,QAAS,kBAAMV,GAAQ,IAAQI,QAAQ,mBAA/C,gBAMFL,GACA,kBAACU,EAAA,EAAD,CAAQC,QAAS,kBAAMV,GAAQ,IAAOI,QAAQ,gBAA9C,c,oDCQKO,E,YAlCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,WAAY,IAId,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBARH,E,0EAYNC,GACXC,KAAKC,SAAS,CAAEL,WAAYG,EAAMV,OAAOa,U,+BAKzC,OACE,yBAAKlB,UAAU,oBAGb,2BACEmB,KAAK,OACLC,YAAY,QACZF,MAAOF,KAAKL,MAAMC,WAClBS,SAAUL,KAAKH,eAEjB,wBAAIb,UAAU,QAAd,UAA6BgB,KAAKL,MAAMC,iB,GA9BrBU,aCqDZC,E,YAlDb,WAAYb,GAAQ,IAAD,8BACjB,4CAAMA,KAaRc,cAAgB,WACd,EAAKP,SAAS,CAAEQ,OAAQ,EAAKd,MAAMc,OAAS,KAf3B,EAiBnBC,aAAe,WACb,EAAKT,SAAS,CAAEQ,OAAQ,EAAKd,MAAMc,OAAS,KAlB3B,EAoBnBE,YAAc,WACZ,EAAKV,SAAS,CAAEpB,MAAO,EAAKc,MAAMd,QAlBlC,EAAKc,MAAQ,CACXc,OAAQ,EACR5B,MAAM,GALS,E,sEA0BjB,OACE,yBAAKG,UAAU,oBAGb,kBAACO,EAAA,EAAD,CAAQL,QAAQ,SAAhB,6BAEA,kBAACK,EAAA,EAAD,CAAQL,QAAQ,OAAOM,QAASQ,KAAKQ,eAArC,2BAIA,kBAACjB,EAAA,EAAD,CAAQL,QAAQ,QAAQM,QAASQ,KAAKU,cAAtC,0BAIA,kBAACnB,EAAA,EAAD,CAAQL,QAAQ,UAAUM,QAASQ,KAAKW,aACrCX,KAAKL,MAAMd,KAAO,cAAgB,eAGpCmB,KAAKL,MAAMd,KAAO,4BAAKmB,KAAKL,MAAMc,QAAe,Q,GA9CtCH,aCeLM,MAbf,WACE,OACE,6BACE,6BACA,uBAAG5B,UAAU,eAAb,mBACA,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCTN6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e723aa27.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Alert, Button, Container } from \"react-bootstrap\";\n\nexport default function AlertDismissible() {\n  const [show, setShow] = useState(false);\n\n  return (\n    <>\n      <Container className=\"mt-5\">\n        <Alert show={show} variant=\"success\">\n          <Alert.Heading>How's it going Art?!</Alert.Heading>\n          <p>\n            Perfect exercise for you would be to create another component below,\n            that can increment and decrement a number on a button click.\n          </p>\n          <a\n            href=\"https://www.google.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            This link might help\n          </a>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button onClick={() => setShow(false)} variant=\"outline-success\">\n              Close me!\n            </Button>\n          </div>\n        </Alert>\n\n        {!show && (\n          <Button onClick={() => setShow(true)} variant=\"outline-info\">\n            Show msg\n          </Button>\n        )}\n      </Container>\n    </>\n  );\n}\n","import React, { Component } from \"react\";\n\n// When using state, we use Class component\nclass StateExample extends Component {\n  //  when setting initial state, we use constructor and super() and we pass in props\n  constructor(props) {\n    super(props);\n    //  here we initialize the state\n    this.state = {\n      inputValue: \"\"\n    };\n\n    // here we bind the created change function to this\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // here we create a function where we listen to the event, and based on the event we update the state\n  handleChange(event) {\n    this.setState({ inputValue: event.target.value });\n  }\n\n  //   when using class component we have to use render()\n  render() {\n    return (\n      <div className=\"text-center mt-5\">\n        {/* here we set the value of the state and onChange(we call the handleChange function that upadtes the state of what we input) */}\n\n        <input\n          type=\"text\"\n          placeholder=\"input\"\n          value={this.state.inputValue}\n          onChange={this.handleChange}\n        />\n        <h3 className=\"mt-5\">output:{this.state.inputValue}</h3>\n      </div>\n    );\n  }\n}\n\nexport default StateExample;\n\n// !!! remember this represents the windows object, in the component this represents the functions internal object\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\n// When using state, we use Class component\nclass Lever extends Component {\n  //  when setting initial state, we use constructor and super() and we pass in props\n  constructor(props) {\n    super(props);\n    //  here we initialize the state\n    this.state = {\n      clicks: 0,\n      show: true\n      //inputValue: \"\"\n    };\n\n    // here we bind the created change function to this\n  }\n\n  //here we create a function where we listen to the event, and based on the event we update the state\n\n  IncrementItem = () => {\n    this.setState({ clicks: this.state.clicks + 1 });\n  };\n  DecreaseItem = () => {\n    this.setState({ clicks: this.state.clicks - 1 });\n  };\n  ToggleClick = () => {\n    this.setState({ show: !this.state.show });\n  };\n\n  //when using class component we have to use render()\n  render() {\n    return (\n      <div className=\"text-center mt-5\">\n        {/* here we set the value of the state and onChange(we call the handleChange function that upadtes the state of what we input) */}\n\n        <Button variant=\"light\">Gelfriend was hot like me</Button>\n\n        <Button variant=\"dark\" onClick={this.IncrementItem}>\n          Click to increment by 1\n        </Button>\n\n        <Button variant=\"light\" onClick={this.DecreaseItem}>\n          Click to decrease by 1\n        </Button>\n\n        <Button variant=\"primary\" onClick={this.ToggleClick}>\n          {this.state.show ? \"Hide number\" : \"Show number\"}\n        </Button>\n\n        {this.state.show ? <h2>{this.state.clicks}</h2> : \"\"}\n      </div>\n    );\n  }\n}\n\nexport default Lever;\n\n// !!! remember this represents the windows object, in the component this represents the functions internal object\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MsgToArt from \"./components/MsgToArt\";\nimport StateExample from \"./components/StateExample\"; //here we import component\nimport Lever from \"./components/Lever\";\n\nfunction App() {\n  return (\n    <div>\n      <hr />\n      <p className=\"text-center\">Art's component</p>\n      <hr />\n      <Lever />\n      <StateExample />\n      <MsgToArt />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}